{3,
{42,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{1,3699f6a3-9a2a-4c82-a775-6ff4824a08ca,"ОбработкаОповещения",0,0},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3},0,"","",1,
{21,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{10,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,"",0,0,0,0,0,0,3,3,0,0,0},"//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Служебная функция.
Функция ДобавитьШагВМассивТестов(МассивТестов,Снипет,ИмяПроцедуры,ПредставлениеТеста = Неопределено,Транзакция = Неопределено,Параметр = Неопределено)
	Структура = Новый Структура;
	Структура.Вставить(""Снипет"",Снипет);
	Структура.Вставить(""ИмяПроцедуры"",ИмяПроцедуры);
	Структура.Вставить(""ИмяПроцедуры"",ИмяПроцедуры);
	Структура.Вставить(""ПредставлениеТеста"",ПредставлениеТеста);
	Структура.Вставить(""Транзакция"",Транзакция);
	Структура.Вставить(""Параметр"",Параметр);
	МассивТестов.Добавить(Структура);
КонецФункции

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	ДобавитьШагВМассивТестов(ВсеТесты,""ВКачествеКаталогаПоискаФичУказываюТестовыйКаталог(Парам01)"",""ВКачествеКаталогаПоискаФичУказываюТестовыйКаталог"",""Когда В качестве каталога поиска фич указываю тестовый каталог """"lib\Проверка чтения описания и родительских каталогов фич"""""");
	ДобавитьШагВМассивТестов(ВсеТесты,""ТипВозвращаемогоОбъекта(Парам01)"",""ТипВозвращаемогоОбъекта"",""Тогда Тип возвращаемого объекта """"Структура"""""");
	ДобавитьШагВМассивТестов(ВсеТесты,""КоличествоВозвращаемыхЭлементовВОбъектеРавно(Парам01)"",""КоличествоВозвращаемыхЭлементовВОбъектеРавно"",""И Количество возвращаемых элементов в объекте равно 3"");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	КаталогИнструментов = ПолучитьКаталогИнструментовНаСервере();
	
	Контекст.Вставить(""КаталогИнструментов"", КаталогИнструментов);
	
	ПолноеИмяФайлаОбработки = Контекст.КаталогИнструментов + ""sbFeatureReader.epf"";

	АдресХранилища = """";
	
	Ванесса.ЗапретитьВыполнениеШагов();
	
	НачатьПомещениеФайла(Новый ОписаниеОповещения(""НачатьПомещениеФайлаЗавершение"", ЭтотОбъект), АдресХранилища, ПолноеИмяФайлаОбработки, Ложь, Новый УникальныйИдентификатор); 
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКаталогИнструментовНаСервере()
	КаталогStackCommons = Константы.КаталогStackCommons.Получить();
	
	Возврат КаталогStackCommons;
КонецФункции

&НаКлиенте
Процедура НачатьПомещениеФайлаЗавершение(Результат, АдресХранилища, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	Если Результат Тогда
		ИмяВнешнейОбработки = ПодключитьВнешнююОбработкуСервер(АдресХранилища);

		ФормаОбработки = ПолучитьФорму(""ВнешняяОбработка."" + ИмяВнешнейОбработки + "".Форма.Форма"",, ЭтаФорма);

		Контекст.Вставить(""ФормаОбработки"", ФормаОбработки);
	КонецЕсли;
	
	Ванесса.ПродолжитьВыполнениеШагов();
КонецПроцедуры

&НаСервере
Функция ПодключитьВнешнююОбработкуСервер(АдресХранилища)
	Возврат ВнешниеОбработки.Подключить(АдресХранилища);
КонецФункции

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Когда В качестве каталога поиска фич указываю тестовый каталог ""lib\Проверка чтения описания и родительских каталогов фич""
//@ВКачествеКаталогаПоискаФичУказываюТестовыйКаталог(Парам01)
Процедура ВКачествеКаталогаПоискаФичУказываюТестовыйКаталог(Парам01) Экспорт
	Ванесса.ЗапретитьВыполнениеШагов();
	
	Контекст.ФормаОбработки.ПрочитатьОписаниеФичиИРодительскиеКаталоги(Контекст.КаталогИнструментов + Парам01);
КонецПроцедуры

&НаКлиенте
//Тогда Тип возвращаемого объекта ""Структура""
//@ТипВозвращаемогоОбъекта(Парам01)
Процедура ТипВозвращаемогоОбъекта(Парам01) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	Ванесса.ПроверитьРавенство(ТипЗнч(Контекст.ОписаниеФичИРодительскихКаталогов), Тип(Парам01));
КонецПроцедуры

&НаКлиенте
//И Количество возвращаемых элементов в объекте равно 3
//@КоличествоВозвращаемыхЭлементовВОбъектеРавно(Парам01)
Процедура КоличествоВозвращаемыхЭлементовВОбъектеРавно(Парам01) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	Ванесса.ПроверитьРавенство(Контекст.ОписаниеФичИРодительскихКаталогов.Количество(), Парам01);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = ""ОписаниеФичИРодительскиеКаталогиПрочитаны"" Тогда
		ОписаниеФичИРодительскихКаталогов = Контекст.ФормаОбработки.ПолучитьОписаниеФичИРодительскихКаталогов();
		
		Контекст.Вставить(""ОписаниеФичИРодительскихКаталогов"", ОписаниеФичИРодительскихКаталогов);

		//ЭтаФорма.Закрыть();
		
		Ванесса.ПродолжитьВыполнениеШагов();
	КонецЕсли;
КонецПроцедуры

//окончание текста модуля",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",1fa267af-3d54-4f70-ac00-718486d7aafd}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}