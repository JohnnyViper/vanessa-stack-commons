//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Служебная функция.
Функция ДобавитьШагВМассивТестов(МассивТестов,Снипет,ИмяПроцедуры,ПредставлениеТеста = Неопределено,Транзакция = Неопределено,Параметр = Неопределено)
	Структура = Новый Структура;
	Структура.Вставить("Снипет",Снипет);
	Структура.Вставить("ИмяПроцедуры",ИмяПроцедуры);
	Структура.Вставить("ИмяПроцедуры",ИмяПроцедуры);
	Структура.Вставить("ПредставлениеТеста",ПредставлениеТеста);
	Структура.Вставить("Транзакция",Транзакция);
	Структура.Вставить("Параметр",Параметр);
	МассивТестов.Добавить(Структура);
КонецФункции

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	ДобавитьШагВМассивТестов(ВсеТесты,"ОтносительноеИмяФайлаОбработкиДляЧтенияФичСледующее(Парам01)","ОтносительноеИмяФайлаОбработкиДляЧтенияФичСледующее","Дано Относительное имя файла обработки для чтения фич следующее ""sbFeatureReader.epf""");
	ДобавитьШагВМассивТестов(ВсеТесты,"ОтносительноеИмяФайлаОбработкиДляЗаписиФичСледующее(Парам01)","ОтносительноеИмяФайлаОбработкиДляЗаписиФичСледующее","Дано Относительное имя файла обработки для записи фич следующее ""sbFeatureWriter.epf""");
	ДобавитьШагВМассивТестов(ВсеТесты,"ОтносительноеИмяФайлаОбработкиДляЧтенияФикстурСледующее(Парам01)","ОтносительноеИмяФайлаОбработкиДляЧтенияФикстурСледующее","Дано Относительное имя файла обработки для чтения фикстур следующее ""sbFixturesReader.epf""");
	ДобавитьШагВМассивТестов(ВсеТесты,"ОтносительноеИмяФайлаОбработкиДляЗаписиФикстурСледующее(Парам01)","ОтносительноеИмяФайлаОбработкиДляЗаписиФикстурСледующее","Дано Относительное имя файла обработки для записи фикстур следующее ""sbFixturesWriter.epf""");
	ДобавитьШагВМассивТестов(ВсеТесты,"ИмяФайлаОбработкиДляЧтенияФичКорректно()","ИмяФайлаОбработкиДляЧтенияФичКорректно","Дано Имя файла обработки для чтения фич корректно");
	ДобавитьШагВМассивТестов(ВсеТесты,"ИмяФайлаОбработкиДляЗаписиФичКорректно()","ИмяФайлаОбработкиДляЗаписиФичКорректно","Дано Имя файла обработки для записи фич корректно");
	ДобавитьШагВМассивТестов(ВсеТесты,"ИмяФайлаОбработкиДляЧтенияФикстурКорректно()","ИмяФайлаОбработкиДляЧтенияФикстурКорректно","Дано Имя файла обработки для чтения фикстур корректно");
	ДобавитьШагВМассивТестов(ВсеТесты,"ИмяФайлаОбработкиДляЗаписиФикстурКорректно()","ИмяФайлаОбработкиДляЗаписиФикстурКорректно","Дано Имя файла обработки для записи фикстур корректно");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	КаталогИнструментов = ПолучитьКаталогИнструментовНаСервере();

	Проверка = Новый Структура;
	
	Проверка.Вставить("ИмяФайлаОбработкиДляЧтенияФичКорректно", "sbFeatureReader");
	Проверка.Вставить("ИмяФайлаОбработкиДляЗаписиФичКорректно", "sbFeatureWriter");
	Проверка.Вставить("ИмяФайлаОбработкиДляЧтенияФикстурКорректно", "sbFixturesReader");
	Проверка.Вставить("ИмяФайлаОбработкиДляЗаписиФикстурКорректно", "sbFixturesWriter");
	
	Контекст.Вставить("Проверка", Проверка);
	
	Ванесса.ЗапретитьВыполнениеШагов();
	
	НачатьПоискФайлов(Новый ОписаниеОповещения("ПередНачаломСценарияЗавершение", ЭтотОбъект), КаталогИнструментов, "*.epf");
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Дано Имя файла обработки для чтения фич корректно
//@ИмяФайлаОбработкиДляЧтенияФичКорректно()
Процедура ИмяФайлаОбработкиДляЧтенияФичКорректно() Экспорт
	Ванесса.ПроверитьИстину(Контекст.Проверка.ИмяФайлаОбработкиДляЧтенияФичКорректно, "");
КонецПроцедуры

&НаКлиенте
//Дано Имя файла обработки для записи фич корректно
//@ИмяФайлаОбработкиДляЗаписиФичКорректно()
Процедура ИмяФайлаОбработкиДляЗаписиФичКорректно() Экспорт
	Ванесса.ПроверитьИстину(Контекст.Проверка.ИмяФайлаОбработкиДляЗаписиФичКорректно, "");
КонецПроцедуры

&НаКлиенте
//Дано Имя файла обработки для чтения фикстур корректно
//@ИмяФайлаОбработкиДляЧтенияФикстурКорректно()
Процедура ИмяФайлаОбработкиДляЧтенияФикстурКорректно() Экспорт
	Ванесса.ПроверитьИстину(Контекст.Проверка.ИмяФайлаОбработкиДляЧтенияФикстурКорректно, "");
КонецПроцедуры

&НаКлиенте
//Дано Имя файла обработки для записи фикстур корректно
//@ИмяФайлаОбработкиДляЗаписиФикстурКорректно()
Процедура ИмяФайлаОбработкиДляЗаписиФикстурКорректно() Экспорт
	Ванесса.ПроверитьИстину(Контекст.Проверка.ИмяФайлаОбработкиДляЗаписиФикстурКорректно, "");
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКаталогИнструментовНаСервере()
	КаталогStackCommons = Константы.КаталогStackCommons.Получить();
	
	Возврат КаталогStackCommons;
КонецФункции

&НаКлиенте
Процедура ПередНачаломСценарияЗавершение(НайденныеФайлы, ДополнительныеПараметры) Экспорт
	ИменаФайлов = Новый Массив;
	
	Для Каждого Файл Из НайденныеФайлы Цикл
		ИменаФайлов.Добавить(Файл.ИмяБезРасширения);
	КонецЦикла;
	
	Для Каждого Элемент Из Контекст.Проверка  Цикл
		Если ИменаФайлов.Найти(Элемент.Значение) = Неопределено Тогда
			Контекст.Проверка[Элемент.Ключ] = Ложь;
		Иначе
			Контекст.Проверка[Элемент.Ключ] = Истина;
		КонецЕсли;
	КонецЦикла;
	
	//Ванесса.ПосмотретьЗначение(НайденныеФайлы,Истина);

	Ванесса.ПродолжитьВыполнениеШагов();
КонецПроцедуры   
