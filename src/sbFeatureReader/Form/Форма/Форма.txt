
&НаКлиенте
Процедура Команда1(Команда)
	ПрочитатьОписаниеФичиИРодительскиеКаталоги("D:\xDD\Rep\vanessa-stack-commons\lib\Проверка чтения описания и родительских каталогов фич");
	//ПрочитатьФичиИЗаголовки("C:\Users\Alehin Sasha\Desktop\п1\п12\п122\п1221\ф3.feature");
КонецПроцедуры

#Область Клиентские_API

#Область Фичи_и_родительские_каталоги

&НаКлиенте
Процедура ПрочитатьОписаниеФичиИРодительскиеКаталоги(КаталогФич, ВариантЧтения = 0) Экспорт
	Объект.Фичи = Новый Структура;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("КаталогПоиска", КаталогФич + "\");
	
	НачатьПоискФайлов(Новый ОписаниеОповещения("ПрочитатьОписаниеФичиИРодительскиеКаталогиЗавершение", ЭтотОбъект, ДополнительныеПараметры), КаталогФич, "*.feature", Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьОписаниеФичиИРодительскиеКаталогиЗавершение(НайденныеФайлы, ДополнительныеПараметры) Экспорт
	Если ЗначениеЗаполнено(НайденныеФайлы) Тогда
		Для Каждого НайденныйФайл Из НайденныеФайлы Цикл
			Фича = СоздатьФичу(Объект.Фичи, НайденныйФайл);
			ОпределитьРодительскиеКаталогиФичи(Фича, НайденныйФайл, ДополнительныеПараметры);
			
			Объект.Фичи.Вставить(НайденныйФайл.ИмяБезРасширения, Фича);
		КонецЦикла;
		
		Оповестить("ОписаниеФичИРодительскиеКаталогиПрочитаны");
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Функция СоздатьФичу(Фичи, НайденныйФайл)
	Фича = Новый Структура;
	
	Фича.Вставить("Имя", НайденныйФайл.Имя);
	Фича.Вставить("ИмяБезРасширения", НайденныйФайл.ИмяБезРасширения);
	Фича.Вставить("ПолноеИмя", НайденныйФайл.ПолноеИмя);
	Фича.Вставить("Путь", НайденныйФайл.Путь);
	Фича.Вставить("Расширение", НайденныйФайл.Расширение);
	Фича.Вставить("Родитель", Неопределено);
	
	Возврат Фича;
КонецФункции

&НаКлиенте
Процедура ОпределитьРодительскиеКаталогиФичи(Фича, НайденныйФайл, ДополнительныеПараметры)
	РодительскиеКаталоги = ПолучитьРодительскиеКаталоги(НайденныйФайл, ДополнительныеПараметры);
	
	СоздатьРодительскиеКаталоги(Фича.Родитель, РодительскиеКаталоги);
КонецПроцедуры

&НаКлиенте
Функция ПолучитьРодительскиеКаталоги(НайденныйФайл, ДополнительныеПараметры)
	СтрокаРодительскихКаталогов = СтрЗаменить(НайденныйФайл.Путь, ДополнительныеПараметры.КаталогПоиска, "");

	Разделитель = "\";
	
	РодительскиеКаталоги = Новый Массив;
	
	Пока Не ПустаяСтрока(СтрокаРодительскихКаталогов) Цикл
		ПозицияРазделителя = СтрНайти(СтрокаРодительскихКаталогов, Разделитель);
		Если ПозицияРазделителя = 0 Тогда
			СтрокаРодительскихКаталогов = "";
		Иначе
			Родитель = Лев(СтрокаРодительскихКаталогов, ПозицияРазделителя - 1);
			
			РодительскиеКаталоги.Вставить(0, Родитель);
			
			СтрокаРодительскихКаталогов = Сред(СтрокаРодительскихКаталогов, ПозицияРазделителя + 1);
		КонецЕсли;
	КонецЦикла;
	
	Возврат РодительскиеКаталоги;
КонецФункции

&НаКлиенте
Процедура СоздатьРодительскиеКаталоги(Родитель, РодительскиеКаталоги)
	Если Не ЗначениеЗаполнено(РодительскиеКаталоги) Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеРодителя = Новый Структура;
	
	ОписаниеРодителя.Вставить("Имя", РодительскиеКаталоги[0]);
	ОписаниеРодителя.Вставить("Родитель", Неопределено);

	Родитель = ОписаниеРодителя;
	
	РодительскиеКаталоги.Удалить(0);
	
	СоздатьРодительскиеКаталоги(Родитель.Родитель, РодительскиеКаталоги);
КонецПроцедуры

&НаКлиенте
Функция ПолучитьОписаниеФичиИРодительскиеКаталоги() Экспорт
	Возврат Объект.Фичи;
КонецФункции

#КонецОбласти

#Область Фичи_и_заголовки

&НаКлиенте
Процедура ПрочитатьФичиИЗаголовки(КаталогФич)
	Фича = Новый ТекстовыйДокумент;

	

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Серверные_API

#Область Содержание_фич

#КонецОбласти

#КонецОбласти
