{3,
{42,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0,0,0},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{1,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"Команда1",
{1,0},1,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{2,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Команда1РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{3,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"Команда2",
{1,0},1,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{4,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Команда2РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3},"","",1,
{21,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{10,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,"",0,0,0,0,0,0,3,3,0,0,0},"
&НаКлиенте
Перем НайденныеФайлыИАдресаВоВременномХранилище;

&НаКлиенте
Процедура Команда1(Команда)
	//ПрочитатьОписаниеФичиИРодительскиеКаталоги(""D:\xDD\Rep\vanessa-stack-commons\lib\Проверка чтения описания и родительских каталогов фич"", Истина, """");
	ПрочитатьОдинФайл(""D:\xDD\Rep\vanessa-stack-commons\features\feature reader\Читатель фич умеет читать описание фич и их родительских каталогов.feature"", Истина, """");
	//НайтиИПрочитатьФайлыВКаталогах(""D:\xDD\Rep\vanessa-stack-commons\lib\Проверка чтения описания и родительских каталогов фич"", Истина, """");
КонецПроцедуры

&НаКлиенте
Процедура НайтиИПрочитатьФайлыВКаталогах(КаталогФич, ИнвертироватьСтрокуРодительскихКаталогов, ИмяСобытия) Экспорт
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить(""КаталогПоиска"", КаталогФич + ""\"");
	ДополнительныеПараметры.Вставить(""ИнвертироватьСтрокуРодительскихКаталогов"", ИнвертироватьСтрокуРодительскихКаталогов);
	ДополнительныеПараметры.Вставить(""ИмяСобытия"", ИмяСобытия);
	
	НачатьПоискФайлов(Новый ОписаниеОповещения(""НайтиИПрочитатьФайлыВКаталогахОбработкаОповещения"", ЭтотОбъект, ДополнительныеПараметры), КаталогФич, ""*.feature"", Истина);
КонецПроцедуры

&НаКлиенте
Процедура НайтиИПрочитатьФайлыВКаталогахОбработкаОповещения(НайденныеФайлы, ДополнительныеПараметры) Экспорт
	Для Каждого НайденныйФайл Из НайденныеФайлы Цикл
		НайденныеФайлыИАдресаВоВременномХранилище.Вставить(НайденныйФайл, Неопределено);
	КонецЦикла;
	
	ОпределитьАдресаНайденныхФайловВоВременномХранилище();
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьАдресаНайденныхФайловВоВременномХранилище()
	Для Каждого Строка Из НайденныеФайлыИАдресаВоВременномХранилище Цикл
		Если Строка.Значение = Неопределено Тогда
			Адрес = """";
			
			НачатьПомещениеФайла(Новый ОписаниеОповещения(""Тест"", ЭтотОбъект, Строка), Адрес, Строка.Ключ.ПолноеИмя, Ложь);
			
			
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	// ПрочитатьСодержимоеФич
КонецПроцедуры

&НаКлиенте
Процедура Тест(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	ДополнительныеПараметры.Значение = 1;

	ОпределитьАдресаНайденныхФайловВоВременномХранилище();
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьОдинФайл(ИмяФайла, ИнвертироватьСтрокуРодительскихКаталогов, ИмяСобытия) Экспорт
	Файл = Новый Файл(ИмяФайла);
	
	НайденныеФайлы = Новый Массив;
	
	НайденныеФайлы.Добавить(Файл);
	
	ДополнительныеПараметры = Новый Структура;
	
	ДополнительныеПараметры.Вставить(""КаталогПоиска"", ИмяФайла);
	ДополнительныеПараметры.Вставить(""ИнвертироватьСтрокуРодительскихКаталогов"", ИнвертироватьСтрокуРодительскихКаталогов);
	ДополнительныеПараметры.Вставить(""ИмяСобытия"", ИмяСобытия);
	
	НайтиИПрочитатьФайлыВКаталогахОбработкаОповещения(НайденныеФайлы, ДополнительныеПараметры);
	
	//Фича = СоздатьФичу(Новый Файл(НачальноеИмяФайла));
	//
	//ДополнительныеПараметры = Новый Структура;
	//
	//ДополнительныеПараметры.Вставить(""Фича"", Фича);
	//ДополнительныеПараметры.Вставить(""ИмяСобытия"", ИмяСобытия);
	//ДополнительныеПараметры.Вставить(""СледующаяПроцедура"", Новый ОписаниеОповещения(""ПрочитатьОдинФайлЗавершение"", ЭтотОбъект));
	//
	//Адрес = """";
	//
	//НачатьПомещениеФайла(Новый ОписаниеОповещения(""ПрочитатьОдинФайлОбработкаОповещения"", ЭтотОбъект, ДополнительныеПараметры), Адрес, НачальноеИмяФайла, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьОдинФайлОбработкаОповещения(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	Если Не Результат Тогда
		Возврат;
	КонецЕсли;
	
	ПрочитатьОдинФайлНаСервере(ДополнительныеПараметры.Фича, Адрес);
	
	ВыполнитьОбработкуОповещения(ДополнительныеПараметры.СледующаяПроцедура, ДополнительныеПараметры.Фича); 
КонецПроцедуры

&НаСервере
Процедура ПрочитатьОдинФайлНаСервере(Фича, Адрес)
	Фича.Вставить(""Функционал"");

КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьОдинФайлЗавершение(Фича, ДополнительныеПараметры) Экспорт
	Объект.Фичи = Новый Структура;
	
	ИмяПеременной = ПолучитьИмяПеременнойИзСтроки(Фича.ИмяБезРасширения);
	
	Объект.Фичи.Вставить(ИмяПеременной, Фича);
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьОписаниеФичиИРодительскиеКаталоги(КаталогФич, ИнвертироватьСтрокуРодительскихКаталогов, ИмяСобытия) Экспорт
	Объект.Фичи = Новый Структура;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить(""КаталогПоиска"", КаталогФич + ""\"");
	ДополнительныеПараметры.Вставить(""ИнвертироватьСтрокуРодительскихКаталогов"", ИнвертироватьСтрокуРодительскихКаталогов);
	ДополнительныеПараметры.Вставить(""ИмяСобытия"", ИмяСобытия);
	
	НачатьПоискФайлов(Новый ОписаниеОповещения(""ПрочитатьОписаниеФичиИРодительскиеКаталогиЗавершение"", ЭтотОбъект, ДополнительныеПараметры), КаталогФич, ""*.feature"", Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьОписаниеФичиИРодительскиеКаталогиЗавершение(НайденныеФайлы, ДополнительныеПараметры) Экспорт
	Если ЗначениеЗаполнено(НайденныеФайлы) Тогда
		Для Каждого НайденныйФайл Из НайденныеФайлы Цикл
			Фича = СоздатьФичу(НайденныйФайл);
			ОпределитьРодительскиеКаталогиФичи(Фича, НайденныйФайл, ДополнительныеПараметры);
			
			Объект.Фичи.Вставить(НайденныйФайл.ИмяБезРасширения, Фича);
		КонецЦикла;

		Оповестить(ДополнительныеПараметры.ИмяСобытия, Объект.Фичи);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Функция СоздатьФичу(НайденныйФайл)
	Фича = Новый Структура;
	
	Фича.Вставить(""Имя"", НайденныйФайл.Имя);
	Фича.Вставить(""ИмяБезРасширения"", НайденныйФайл.ИмяБезРасширения);
	Фича.Вставить(""ПолноеИмя"", НайденныйФайл.ПолноеИмя);
	Фича.Вставить(""Путь"", НайденныйФайл.Путь);
	Фича.Вставить(""Расширение"", НайденныйФайл.Расширение);
	Фича.Вставить(""Родитель"", Неопределено);
	
	Возврат Фича;
КонецФункции

&НаКлиенте
Процедура ОпределитьРодительскиеКаталогиФичи(Фича, НайденныйФайл, ДополнительныеПараметры)
	РодительскиеКаталоги = ПолучитьРодительскиеКаталоги(НайденныйФайл, ДополнительныеПараметры);
	
	СоздатьРодительскиеКаталоги(Фича.Родитель, РодительскиеКаталоги);
КонецПроцедуры

&НаКлиенте
Функция ПолучитьРодительскиеКаталоги(НайденныйФайл, ДополнительныеПараметры)
	СтрокаРодительскихКаталогов = СтрЗаменить(НайденныйФайл.Путь, ДополнительныеПараметры.КаталогПоиска, """");

	Если ДополнительныеПараметры.ИнвертироватьСтрокуРодительскихКаталогов Тогда
		ИнвертироватьСтрокуРодительскихКаталогов(СтрокаРодительскихКаталогов);	
	КонецЕсли;

	Разделитель = ""\"";
	
	РодительскиеКаталоги = Новый Массив;
	
	Пока Не ПустаяСтрока(СтрокаРодительскихКаталогов) Цикл
		ПозицияРазделителя = СтрНайти(СтрокаРодительскихКаталогов, Разделитель);
		Если ПозицияРазделителя = 0 Тогда
			СтрокаРодительскихКаталогов = """";
		Иначе
			Родитель = Лев(СтрокаРодительскихКаталогов, ПозицияРазделителя - 1);
			
			РодительскиеКаталоги.Вставить(0, Родитель);
			
			СтрокаРодительскихКаталогов = Сред(СтрокаРодительскихКаталогов, ПозицияРазделителя + 1);
		КонецЕсли;
	КонецЦикла;
	
	Возврат РодительскиеКаталоги;
КонецФункции

&НаСервере
Процедура ИнвертироватьСтрокуРодительскихКаталогов(ИсходнаяСтрока)
	Каталоги = Новый ТаблицаЗначений;
	
	Каталоги.Колонки.Добавить(""Порядок"");
	Каталоги.Колонки.Добавить(""Каталог"");
	
	Разделитель = ""\"";
	
	Индекс = 1;
	
	Пока Не ПустаяСтрока(ИсходнаяСтрока) Цикл
		НоваяСтрока = Каталоги.Добавить();
		
		НоваяСтрока.Порядок = Индекс;
		НоваяСтрока.Каталог = Лев(ИсходнаяСтрока, СтрНайти(ИсходнаяСтрока, Разделитель) - 1);
		
		ИсходнаяСтрока = Сред(ИсходнаяСтрока, СтрНайти(ИсходнаяСтрока, Разделитель) + 1);
		
		Индекс = Индекс + 1;
		
	КонецЦикла;

	Каталоги.Сортировать(""Порядок Убыв"");
	
	Для Каждого Строка Из Каталоги Цикл
		ИсходнаяСтрока = ИсходнаяСтрока + Строка.Каталог + Разделитель;

	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРодительскиеКаталоги(Родитель, РодительскиеКаталоги)
	Если Не ЗначениеЗаполнено(РодительскиеКаталоги) Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеРодителя = Новый Структура;
	
	ОписаниеРодителя.Вставить(""Имя"", РодительскиеКаталоги[0]);
	ОписаниеРодителя.Вставить(""Родитель"", Неопределено);

	Родитель = ОписаниеРодителя;
	
	РодительскиеКаталоги.Удалить(0);
	
	СоздатьРодительскиеКаталоги(Родитель.Родитель, РодительскиеКаталоги);
КонецПроцедуры

&НаКлиенте
Функция ПолучитьИмяПеременнойИзСтроки(ИсходнаяСтрока)
	ПроверочнаяСтрока = ПолучитьПроверочнуюСтроку();
	
	ИсходнаяСтрока = СокрЛП(ИсходнаяСтрока);
	ИтоговаяСтрока = """";
	
	Пробел = "" "";
	НижнееПодчеркивание = ""_"";
	
	КрайнийСимвол = Истина;
	
	ДлинаСтроки = СтрДлина(ИсходнаяСтрока);
	Для Счетчик = 1 По ДлинаСтроки Цикл
		ТекущийСимвол = Сред(ИсходнаяСтрока, Счетчик, 1);
		
		Если Истина
			И ТекущийСимвол = Пробел
			И Не КрайнийСимвол = НижнееПодчеркивание
			Тогда
			
			ИтоговаяСтрока = ИтоговаяСтрока + ""_"";

		Иначе
			Если Найти(ПроверочнаяСтрока, ТекущийСимвол) > 0 Тогда
				ИтоговаяСтрока = ИтоговаяСтрока + ТекущийСимвол;

			КонецЕсли;
		КонецЕсли;
		
		КрайнийСимвол = Прав(ИтоговаяСтрока, 1);
	КонецЦикла;
	
	ПервыйСимвол = Лев(ИтоговаяСтрока, 1);
	Если Найти(""0123456789"", ПервыйСимвол) > 0 Тогда
		ИтоговаяСтрока = НижнееПодчеркивание + ИтоговаяСтрока;
	КонецЕсли;
	
	Возврат ИтоговаяСтрока;
КонецФункции

&НаСервере
Функция ПолучитьПроверочнуюСтроку()
	КириллицаЗаглавные = ""АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ"";
	КириллицаСтрочные = НРег(КириллицаЗаглавные);
	
	ЛатиницаЗаглавные = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ"";
	ЛатиницаСтрочные = НРег(ЛатиницаЗаглавные);
	
	Цифры = ""0123456789"";
	
	ПроверочнаяСтрока = 
	КириллицаЗаглавные +
	КириллицаСтрочные +
	ЛатиницаЗаглавные +
	ЛатиницаСтрочные +
	Цифры;
	
	Возврат ПроверочнаяСтрока;
КонецФункции

НайденныеФайлыИАдресаВоВременномХранилище = Новый Соответствие;
",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",6a228417-d4d5-46ef-93b5-979f99c0a9e6}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,2,
{7,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"Команда1",
{1,0},
{1,0},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"Команда1",3,0,0,
{0,0},1,0},
{7,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"Команда2",
{1,0},
{1,0},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"",3,0,0,
{0,0},1,0}
},
{0,0},
{0,0},0,0}